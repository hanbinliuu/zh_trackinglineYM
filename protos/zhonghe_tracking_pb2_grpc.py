# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import zhonghe_tracking_pb2 as zhonghe__tracking__pb2


class ZhongheTrackingStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TrackingOperation = channel.unary_unary(
                '/ZhongheTracking/TrackingOperation',
                request_serializer=zhonghe__tracking__pb2.TrackingRequest.SerializeToString,
                response_deserializer=zhonghe__tracking__pb2.TrackingResponse.FromString,
                )


class ZhongheTrackingServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TrackingOperation(self, request, context):
        """给出查询标记flag，给出记录时间戳，给出当前图像流，给出移动速度、当前行架位置，给出全局坐标、里程、局部里程。
        返回当前位置与否进行操作的结果。
        【算法--->软件】 + 【软件--->算法】
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ZhongheTrackingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TrackingOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackingOperation,
                    request_deserializer=zhonghe__tracking__pb2.TrackingRequest.FromString,
                    response_serializer=zhonghe__tracking__pb2.TrackingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ZhongheTracking', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ZhongheTracking(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TrackingOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ZhongheTracking/TrackingOperation',
            zhonghe__tracking__pb2.TrackingRequest.SerializeToString,
            zhonghe__tracking__pb2.TrackingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
